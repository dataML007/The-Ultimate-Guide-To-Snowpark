name: Dependency Update & Security Scan

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  dependency-update:
    name: Check Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Check for outdated packages
      run: |
        pip list --outdated --format=freeze > outdated.txt
        if [ -s outdated.txt ]; then
          echo "Found outdated packages:"
          cat outdated.txt
          echo "::warning::Found outdated packages. Consider updating them."
        else
          echo "All packages are up to date!"
        fi

    - name: Generate requirements.txt with latest versions
      run: |
        pip-compile --upgrade --output-file requirements-updated.txt requirements.txt
        echo "Updated requirements file generated"

    - name: Create Pull Request for updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies to latest versions"
        title: "🔄 Update dependencies to latest versions"
        body: |
          This PR updates dependencies to their latest versions.
          
          **Changes:**
          - Updated package dependencies
          - Generated new requirements-updated.txt
          
          **To apply updates:**
          1. Review the changes
          2. Test locally
          3. Merge if tests pass
        branch: dependency-update
        delete-branch: true
        path: requirements-updated.txt

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: dependency-update
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.8"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit pip-audit

    - name: Run safety check
      run: |
        safety check --full-report --json > safety-report.json
        safety check --full-report

    - name: Run bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt -o bandit-report.txt || true

    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit --format text || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          bandit-report.txt
          pip-audit-report.json

    - name: Comment on PR if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let comment = '## 🔒 Security Scan Results\n\n';
          
          try {
            if (fs.existsSync('safety-report.json')) {
              const safety = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
              if (safety.length > 0) {
                comment += '### ⚠️ Safety Check Issues\n';
                safety.forEach(issue => {
                  comment += `- **${issue.package}**: ${issue.vulnerability_id} - ${issue.advisory}\n`;
                });
                comment += '\n';
              }
            }
          } catch (e) {
            comment += 'Error reading safety report\n';
          }
          
          comment += 'Please review and address any security vulnerabilities found.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
